{"mappings":"AAAA,MAAMA,MACFC,aAAYC,SAAEA,EAAQC,WAAEA,IACpBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAElBC,KAAKC,KAAO,CACRC,SAAUC,SAASC,cAAc,YACjCC,UAAWF,SAASC,cAAc,GAAGN,6BACrCQ,WAAYH,SAASC,cAAc,GAAGN,8BACtCS,aAAcJ,SAASC,cAAc,GAAGN,6BACxCU,aAAcL,SAASC,cAAc,GAAGN,8BAE5CE,KAAKS,O,CAGTA,QACIC,aAAY,KACR,MAAMC,EAAYX,KAAKD,WAAaa,KAAKC,MACzCb,KAAKc,gBAAgBd,KAAKe,kBAAkBJ,GAAW,GACxD,I,CAIPG,iBAAgBE,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IACrCnB,KAAKC,KAAKI,UAAUe,UAAYJ,EAChChB,KAAKC,KAAKK,WAAWc,UAAYH,EACjCjB,KAAKC,KAAKM,aAAaa,UAAYF,EACnClB,KAAKC,KAAKO,aAAaY,UAAYD,C,CAGnCJ,kBAAkBM,GAMd,MAAO,CAAEL,KALIM,IAAIC,KAAKC,MAAMH,EAAQ,QAKrBJ,MAJDK,IAAIC,KAAKC,MAAMH,EAAS,MAAyB,OAIzCH,KAHTI,IAAIC,KAAKC,MAAMH,EAAS,KAAoB,MAG7BF,KAFfG,IAAIC,KAAKC,MAAMH,EAAS,IAAc,M,EAKvD,SAASC,IAAIG,GACT,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAEzC,MAAMC,eAAiB,IAAIhC,MAAM,CAC7BE,SAAU,WACVC,WAAY,IAAIa,KAAK","sources":["src/js/timer.js"],"sourcesContent":["class Timer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n\n        this.refs = {\n            timerBox: document.querySelector('#timer-1'),\n            daysTimer: document.querySelector(`${selector} span[data-value=\"days\"]`),\n            hoursTimer: document.querySelector(`${selector} span[data-value=\"hours\"]`),\n            minutesTimer: document.querySelector(`${selector} span[data-value=\"mins\"]`),\n            secondsTimer: document.querySelector(`${selector} span[data-value=\"secs\"]`),\n        };\n        this.start();\n    }\n\n    start() {\n        setInterval(() => {\n            const deltaTime = this.targetDate - Date.now();\n            this.updateClockface(this.getTimeComponents(deltaTime));\n        }, 1000);\n    }\n\n    \n    updateClockface({ days, hours, mins, secs }) {\n    this.refs.daysTimer.innerHTML = days;\n    this.refs.hoursTimer.innerHTML = hours;\n    this.refs.minutesTimer.innerHTML = mins;\n    this.refs.secondsTimer.innerHTML = secs;\n}\n    \n    getTimeComponents(time) {\n        const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n}\n    function pad(value) {\n        return String(value).padStart(2, '0');\n}\nconst CountDownTimer = new Timer({\n    selector: '#timer-1',\n    targetDate: new Date('Oct 30, 2022'),\n});"],"names":["Timer","constructor","selector","targetDate","this","refs","timerBox","document","querySelector","daysTimer","hoursTimer","minutesTimer","secondsTimer","start","setInterval","deltaTime","Date","now","updateClockface","getTimeComponents","days","hours","mins","secs","innerHTML","time","pad","Math","floor","value","String","padStart","CountDownTimer"],"version":3,"file":"index.75d8e57e.js.map"}